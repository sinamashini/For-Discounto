// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String?
  role           String   @default("USER")
  clients  Clients[]
  tokens   Token[]
  sessions Session[]
  trash    ClientsTrash[]
  logs OpratorLogs[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

enum TokenType {
  RESET_PASSWORD
}

model Clients {
  id             Int      @id @default(autoincrement())
  name           String
  contact        String
  nationalCode   String  @unique
  notes          String?
  email          String? @unique
  address        String?
  hashedPassword String?
  parentId       Int?
  parent         Clients? @relation("Introduced", fields: [parentId], references: [id])
  introduced     Clients[] @relation("Introduced")
  createdAt      DateTime @default(now())
  userId Int?
  createdBy User? @relation(fields: [userId], references: [id])
  packages PackageClient[]
}

model ClientsTrash {
  id             Int   @id @default(autoincrement())
  name           String
  contact        String
  nationalCode   String  @unique
  notes          String?
  email          String? @unique
  address        String?
  hashedPassword String?
  parentName     String?
  parentNationalCode String?
  deletedAt      DateTime @default(now())
  deletedBy User? @relation(fields: [userId], references: [id])
  userId Int?
  packageName String?
}


// ghablian barkhodar beshan ya az in be bad
//aya mikhahid anhayi ke ghablan ham az in shrayat estefade kardand dobare sharayetshan no shavad?
//soal baraye zamane update kardane package

model Package {
  id  Int  @id @default(autoincrement())
  name String
  numberOfNesting Int
  discountOfEachLevelByPercent Int
  description String?
  createdAt DateTime @default(now())
  clients PackageClient[]
}

model PackageClient {
  package Package @relation(fields: [packageId], references: [id])
  packageId Int
  clinet Clients @relation(fields: [clientId], references: [id])
  clientId Int
  assignAt DateTime @default(now())
  used Boolean @default(false)
  discountOfEachLevelByPercent Int?
  numberOfNesting Int?
  discountForEver Int?
  isActive Boolean @default(true)
  @@id([packageId, clientId])
}

model OpratorLogs {
  id  Int  @id @default(autoincrement())
  user  User @relation(fields: [userId], references: [id])
  userId Int
  action String
  happend DateTime @default(now())
}
